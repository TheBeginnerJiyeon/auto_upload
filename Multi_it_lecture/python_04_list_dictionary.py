# -*- coding: utf-8 -*-
"""python_04_list_dictionary.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MBaFl59VSFihBA1F1UIhOc234usVMvR3

리스트

*   리스트 정의, 추가, 삭제
"""

# 리스트는 여러 개의 데이터를 하나의 변수에 묶어 정의하는 컬렉션 데이터 타입입니다.

empty_list=[]
print(empty_list)

# 단일 데이터 타입 정의

list_b=[1,2,3,4]
print(list_b)

# 혼합 데이터 타입 정의
list_c=['21','푸바우',3,3.14,'강아']
print(list_c)

# 리스트 추가 (append)
# >> 리스트의 맨 뒤에 값 추가

list_c.append(10)
print(list_c)

# 삽입 insert()
# 리스트는 순서가 있다(indexing)
# 리스트의 특정 위치의 값에 추가한다!!

print(list_b)
list_b.insert(2,0)
print(list_b)

# 리스트의 값 제거 (remove, del)
# remove

list_c.insert(3,'뭐고')
print(list_c)
list_c.remove('뭐고')
print(list_c)

# del
# del(=delete) 데이터를 직접 지명해주는 게 아니라 위치로 삭제할 데이터를 알려줌

print(list_b)
del list_b[2]
print(list_b)

"""리스트의 접근
*   인덱싱: 위치(숫자)로 리스트의 값을 가져
*   슬라이싱: 전체 리스트를 일부 잘라서 가져옴


"""

# indexing
# 파이썬 인덱스 시작 0부터 시작
list_f=[1,3,5,7,9]
list_f[3]

# 슬라이싱(pricing)
print(list_f[1:3])
print(list_f[2:])
print(list_f[:3])
print(list_f[:-1]) ## 빈번하게 사용
print(list_f[::2])

"""리스트의 함수"""

n_list=[2,4,6,8,10]

# len(): lenght 줄임. 리스트의 크기(길이) 알려줌
len(n_list)

# index 요소가 들어가 있는 데이터 위치 반환
print(n_list.index(2))
print(n_list.index(10))

raw_data=["손흥민","이강인","조현우","황선홍"]
team_korea=raw_data.copy()

print(team_korea.index('손흥민'))
print(team_korea.index('이강인'))
# print(team_korea.index('하이')) ValueError: '하이' is not in list

# pop : 팝팝 튀는 것
keeper= team_korea.pop()
print(keeper)

# sort: 정렬(default(기본값): 오름차순)
n_list=[1,2,3,4,5]
n_list.sort()
print(n_list)

print(raw_data)
raw_data.sort()
raw_data

raw_data.index('손흥민')

# sort(), sorted() 함수 비교
# sort(): 정렬된 리스트를 보여줌
# sorted(): 원래 리스트를 수정하지 않음

bb=sorted(raw_data)
bb

