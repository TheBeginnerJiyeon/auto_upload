# -*- coding: utf-8 -*-
"""python_01_print().ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f6LoEFUs1ibAlTjItpVL7woQXaaFOhlf

**ss**
*hihi*
# 안녕하
## 안녕하
### 안녕하

구글코랩

무작정 따라하는 파이썬



*   멋진 삼행시 짓기 _print()실습
"""

print("저는 자랑스러운 멀캠의 예비 데이터사이언티스트입니다.")
print("진짜로 방갑다고")
print("찬ㅁ말이여")



"""기본 자료형"""

# 숫자 50과 숫자 50을 더해서 출력하기

print(50+50)

# 문자열(string) "50"과 문자열(string) "50"을 더해서 출력하기
print("50"+"50")

# 문자와 문자 더하면 >> 옆에 붙는다

# 파이썬에서 여러 개의 원소(element, 숫자, 문자)를 담는 그릇 >> 리스트(list, 목록)
print([50]+[50])

"""변수

*   변하는 수
*   List item


"""

#  파이썬 변수의 정의
apple=1
print(apple)

Apple="사과"
print(Apple)

# 정수와 소수(부동소수점/실수)

a=1.2
print(a)

b=2
print(b)

print(a+b)

# 문자열

가='hello'
print(가)

# space(빈 공백)도 문자로 인식
나=" good morning"
print(가+나)

# bool

a=True
print(a)

b=False
print(b)

print(a==b)
# == : 같다

print(a!=b)
# !=: 다르다

# 추가

# 변수에는 정수, 실수 같은 숫자를 저장할 수 있어요.

num1=1
num2=2

print(num1-num2)

# 영어나 한글같은 문자도 저장이 가능해요

char="a"
print(char)

# 이런 문자들의 집합도 리스트로 저장할 수 있네요.
# 리스트: 여러 원소( element)를 담는 그릇

List_=[1,'a','python']
print(List_)

# 그 목록(List_)에 원소 몇 개 있니?

len(List_)

# len : lenght

""" 파이썬 연산자"""

# 할당 연산자
a=1
a=a+1

print(a)

a+=1
# a=a+1
a

b=1
b-=2
# b=b-2
b

# 산술 연산자

a=1
b=32

print(a>b)
# True / False 로 반환됨

c=-3 # int(정수)
d=0.2 # float(소수)

print(c<=d)

a = 1
b = 42

print(a==b)

c=-2 # int(정수)
d=-0.2 # float(소수)

print(c!=d)

# 논리연산자(and, or, not)

a=True
b=False

print(a and b)
print(a or b)
print(not a)
print(not b)

# 멤버(member, 소속) 연산자 (in/not in)

a="사과"
b=["사과","배","참외","수박"]
print(a in b)

c="apple"
d=["Apple","pear","watermelon","peach"]

print(c in d)

# 왜? 대소문자 구분

# 식별 연산자(is)

a="사과"
b="사과"

print(a is b)
print(a is not b)

c=12
d=12

print( c is not d)
print(c is d)

# is 와 == 의 차이

'''
1. is 와 == 동등성 비교
2. == 연산자 : 두 객체(a, b...) 값이 동일한 지 비교
3. is 연산자 : 두 객체(a, b...) 식별 동일한 지 비교
  >> 메모리 상에서 같은 위치에 있는 지 확인



'''

a=[1,2,3]
b=[1,2,3]

c=a

'''

a="사과"
b="사과"

print(a is b)

a=12
b=12

print( a is b)

# my_var 라는 이름의 변수를 만들고, 원하는 값을 넣어 보아요

my_var_1='a'
my_var_2=List_[2]

print(my_var_1+my_var_2)

# print(my_var_1+리스트일 때 my_var_2) type error!! 같은 데이터 타입끼리 연산 가능

print(List_)
print(List_[0]) # 숫자 1
print(List_[1]) # 문자열 a
print(List_[2]) # 문자열 python
# print(List_[3]) indexerror 발생

# 변수에 문자열로 된 정수와 실수를 저장하면

a= '345' # 문자 >> 정수(int:integer)
b='3.14' # 문자 >> 실수(flaot)

print(a)
print(b)

print(type(a)) # 문자(string)
print(type(b)) # 문자(string)

# 문자 >> 정수(int:integer)

a=int(a)
type(a)

print(b)
print(type(b))

c= 4.89
print(c)
print(type(c))
c=int(c) # 정수로 변경
print(c)

